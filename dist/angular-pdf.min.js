/*! Angular-PDF Version: 0.5.1 | (C) Sayanee Basu 2014, Matt Edlefsen 2015 released under an MIT license */
!function(){"use strict";angular.module("pdf",[]).directive("ngPdf",["$window",function($window){return{restrict:"E",scope:{src:"@",page:"=?",total:"=?",scale:"=?",rotate:"=?",error:"=?",pdfDoc:"=?",rendering:"=?",rendered:"=?"},template:'<canvas style="display: block;"></canvas>',link:function(scope,element,attrs){var pdfDoc,currentPage,canvas=element[0].getElementsByTagName("canvas")[0],ctx=canvas.getContext("2d");PDFJS.disableWorker=!0,PDFJS.disableRange=!0;var getDoc=function(){PDFJS.getDocument(scope.src,null,null,scope.onProgress).then(function(_pdfDoc){"function"==typeof scope.onLoad&&scope.onLoad(),pdfDoc=_pdfDoc,scope.$apply(function(){scope.pdfDoc=_pdfDoc,scope.total=_pdfDoc.numPages}),scope.render()},function(error){error&&scope.$apply(function(){scope.error=error})})};scope.$watch("src",getDoc),scope.rendering=!1,scope.render=function(){if(pdfDoc&&!scope.rendering){var pageCount=pdfDoc.numPages;
// Changing page will rerender, so just return
// Changing page will rerender, so just return
return scope.page>0?scope.page>pageCount?void(scope.page=pageCount):void(currentPage!==scope.page&&(scope.rendering=!0,currentPage=scope.page,pdfDoc.getPage(scope.page).then(function(page){var scale=scope.scale;if(null!=attrs.fitWidth){var bbox=element[0].parentNode.getBoundingClientRect();scale=bbox.width/page.getViewport(1).width}else scope.scale||(scale=1);scale!=scope.scale&&scope.$apply(function(){scope.scale=scale});var viewport=page.getViewport(scale);canvas.height=viewport.height,canvas.width=viewport.width;var renderContext={canvasContext:ctx,viewport:viewport};page.render(renderContext).promise.then(function(){scope.rendering=!1,scope.rendered=!0})}))):void(scope.page=1)}};var setRotate=function(){var rotate=null==scope.rotate?0:Number.parseInt(scope.rotate);0===rotate?canvas.setAttribute("class","rotate0"):90===rotate?canvas.setAttribute("class","rotate90"):180===rotate?canvas.setAttribute("class","rotate180"):270===rotate&&canvas.setAttribute("class","rotate270")};getDoc(),
//setRotate();
scope.$watch("page",scope.render),scope.$watch("scale",scope.render),scope.$watch("rotate",setRotate)}}}])}();